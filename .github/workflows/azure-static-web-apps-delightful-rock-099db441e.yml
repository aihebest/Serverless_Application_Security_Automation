name: Azure Static Web Apps CI/CD

on:
  push:
    branches: [ master, main ]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [ master, main ]

jobs:
  build_and_deploy_job:
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.20.4'

      - name: Prepare Build Environment
        working-directory: ./security-scan-dashboard
        run: |
          # Create .env file with necessary settings
          cat > .env << 'EOL'
          REACT_APP_API_BASE_URL=${{ secrets.REACT_APP_API_BASE_URL }}
          REACT_APP_CLIENT_ID=${{ secrets.AZURE_AD_CLIENT_ID }}
          REACT_APP_TENANT_ID=${{ secrets.AZURE_AD_TENANT_ID }}
          GENERATE_SOURCEMAP=false
          SKIP_PREFLIGHT_CHECK=true
          DISABLE_ESLINT_PLUGIN=true
          CI=false
          EOL
          
          # Create .npmrc with necessary configurations
          cat > .npmrc << 'EOL'
          legacy-peer-deps=true
          strict-peer-dependencies=false
          auto-install-peers=true
          node-version=18.20.4
          EOL

      - name: Install Dependencies
        working-directory: ./security-scan-dashboard
        run: |
          echo "Cleaning npm cache..."
          npm cache clean --force
          
          echo "Removing old dependencies..."
          rm -rf node_modules package-lock.json
          
          echo "Installing dependencies..."
          npm install --legacy-peer-deps react@latest react-dom@latest
          npm install --legacy-peer-deps

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        env:
          REACT_APP_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
          REACT_APP_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
          REACT_APP_API_BASE_URL: ${{ secrets.REACT_APP_API_BASE_URL }}
          NODE_OPTIONS: "--max-old-space-size=4096"
          CI: false
          GENERATE_SOURCEMAP: false
          SKIP_PREFLIGHT_CHECK: true
          DISABLE_ESLINT_PLUGIN: true
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_DELIGHTFUL_ROCK_099DB441E }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "security-scan-dashboard"
          api_location: "SecurityScanFunction"
          output_location: "build"
          app_build_command: |
            export NODE_OPTIONS="--max-old-space-size=4096"
            npm install --legacy-peer-deps
            CI=false npm run build

      - name: Log Build Results
        if: always()
        run: |
          echo "Build directory contents:"
          ls -la security-scan-dashboard/build || echo "Build directory not found"