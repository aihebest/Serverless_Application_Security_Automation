name: Azure Static Web Apps CI/CD

on:
  push:
    branches: [ master, main ]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [ master, main ]

jobs:
  build_and_deploy_job:
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Clean installation
      - name: Clean Install
        run: |
          cd security-scan-dashboard
          # Remove existing files
          rm -rf node_modules package-lock.json

          # Create clean package.json
          cat > package.json << 'EOL'
          {
            "name": "security-scan-dashboard",
            "version": "1.0.0",
            "private": true,
            "dependencies": {
              "@azure/msal-browser": "2.38.0",
              "@azure/msal-react": "1.5.9",
              "@fluentui/react-components": "9.30.0",
              "axios": "1.6.0",
              "react": "18.2.0",
              "react-dom": "18.2.0",
              "react-scripts": "5.0.1"
            },
            "devDependencies": {
              "@types/node": "16.18.0",
              "@types/react": "18.2.0",
              "@types/react-dom": "18.2.0",
              "@typescript-eslint/eslint-plugin": "5.62.0",
              "@typescript-eslint/parser": "5.62.0",
              "eslint": "8.45.0",
              "eslint-config-react-app": "7.0.1",
              "eslint-plugin-react": "7.33.2",
              "typescript": "4.9.5"
            },
            "scripts": {
              "start": "react-scripts start",
              "build": "react-scripts build",
              "test": "react-scripts test",
              "eject": "react-scripts eject"
            },
            "eslintConfig": {
              "extends": [
                "react-app"
              ]
            }
          }
          EOL

          # Create .npmrc
          echo "legacy-peer-deps=true" > .npmrc
          
          # Clean install
          npm ci

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        env:
          REACT_APP_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
          REACT_APP_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
          REACT_APP_API_BASE_URL: ${{ secrets.REACT_APP_API_BASE_URL }}
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_DELIGHTFUL_ROCK_099DB441E }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "/security-scan-dashboard"
          api_location: "/api"
          output_location: "build"
          app_build_command: "npm run build"

      - name: Verify Build
        if: steps.builddeploy.outcome == 'success'
        run: |
          cd security-scan-dashboard
          if [ -d "build" ]; then
            echo "Build successful!"
          else
            echo "Build failed!"
            exit 1
          fi