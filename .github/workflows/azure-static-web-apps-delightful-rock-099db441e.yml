name: Azure Static Web Apps CI/CD

on:
  push:
    branches: [ master, main ]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [ master, main ]

jobs:
  build_and_deploy_job:
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Debug Directory Structure
        run: |
          echo "Current directory: $(pwd)"
          ls -la
          echo "Repository contents:"
          ls -la $GITHUB_WORKSPACE

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.20.4'

      # Initialize project root
      - name: Setup Project Root
        run: |
          echo '{
            "name": "root",
            "version": "1.0.0",
            "private": true
          }' > package.json
          npm install --package-lock-only

      - name: Install Dependencies
        run: |
          # Navigate to dashboard directory
          cd security-scan-dashboard
          
          # Create package.json if it doesn't exist
          if [ ! -f "package.json" ]; then
            echo '{
              "name": "security-scan-dashboard",
              "version": "1.0.0",
              "private": true,
              "dependencies": {
                "@azure/msal-browser": "^2.39.0",
                "@azure/msal-react": "^1.5.13",
                "@fluentui/react-components": "^9.55.1",
                "react": "^18.2.0",
                "react-dom": "^18.2.0",
                "react-router-dom": "^6.22.0",
                "react-scripts": "5.0.1"
              },
              "scripts": {
                "start": "react-scripts start",
                "build": "react-scripts build",
                "test": "react-scripts test",
                "eject": "react-scripts eject"
              }
            }' > package.json
          fi
          
          # Create .npmrc
          echo "legacy-peer-deps=true
          strict-peer-dependencies=false" > .npmrc
          
          # Install dependencies
          npm install --legacy-peer-deps

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        env:
          REACT_APP_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
          REACT_APP_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
          REACT_APP_API_BASE_URL: ${{ secrets.REACT_APP_API_BASE_URL }}
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_DELIGHTFUL_ROCK_099DB441E }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "./security-scan-dashboard"  # Updated path
          api_location: "./SecurityScanFunction"     # Updated path
          output_location: "build"
          skip_api_build: true                      # Skip API build if not needed
          app_build_command: |
            cd security-scan-dashboard
            npm install --legacy-peer-deps
            npm run build

      - name: Handle Build Failure
        if: failure()
        run: |
          echo "Current working directory: $(pwd)"
          echo "Directory contents:"
          ls -la
          echo "security-scan-dashboard contents:"
          ls -la security-scan-dashboard || echo "Directory not found"
          echo "Package files:"
          find . -name "package.json" -o -name "package-lock.json"