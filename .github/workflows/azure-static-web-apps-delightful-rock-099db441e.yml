name: Azure Static Web Apps CI/CD

on:
  push:
    branches: [ master, main ]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [ master, main ]

jobs:
  build_and_deploy_job:
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.20.4'

      - name: Prepare Project
        run: |
          # Create security-scan-dashboard if it doesn't exist
          mkdir -p security-scan-dashboard
          cd security-scan-dashboard
          
          # Create bare minimum package.json
          echo '{
            "name": "security-scan-dashboard",
            "version": "1.0.0",
            "private": true,
            "scripts": {
              "start": "react-scripts start",
              "build": "react-scripts build"
            }
          }' > package.json
          
          # Create .npmrc
          echo "legacy-peer-deps=true
          strict-peer-dependencies=false" > .npmrc

      - name: Install Dependencies
        working-directory: ./security-scan-dashboard
        run: |
          # Remove existing node_modules and lock files
          rm -rf node_modules package-lock.json
          
          # Install core dependencies first
          npm install --save \
            react@18.2.0 \
            react-dom@18.2.0 \
            react-scripts@5.0.1
          
          # Install other dependencies
          npm install --save \
            @azure/msal-browser@2.38.0 \
            @azure/msal-react@1.5.13 \
            @fluentui/react-components@9.30.0 \
            react-router-dom@6.22.0
          
          # Install dev dependencies
          npm install --save-dev \
            @babel/core@7.23.9 \
            @babel/plugin-proposal-private-property-in-object@7.21.11

      - name: Create React App Structure
        working-directory: ./security-scan-dashboard
        run: |
          # Create src and public directories
          mkdir -p src public
          
          # Create index.html
          echo '<!DOCTYPE html>
          <html lang="en">
            <head>
              <meta charset="utf-8">
              <title>Security Dashboard</title>
            </head>
            <body>
              <div id="root"></div>
            </body>
          </html>' > public/index.html
          
          # Create index.js
          echo 'import React from "react";
          import ReactDOM from "react-dom/client";
          import App from "./App";
          
          const root = ReactDOM.createRoot(document.getElementById("root"));
          root.render(
            <React.StrictMode>
              <App />
            </React.StrictMode>
          );' > src/index.js
          
          # Create App.js
          echo 'import React from "react";
          
          function App() {
            return (
              <div>
                <h1>Security Dashboard</h1>
              </div>
            );
          }
          
          export default App;' > src/App.js

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        env:
          REACT_APP_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
          REACT_APP_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
          REACT_APP_API_BASE_URL: ${{ secrets.REACT_APP_API_BASE_URL }}
          CI: false
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_DELIGHTFUL_ROCK_099DB441E }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "security-scan-dashboard"
          api_location: "SecurityScanFunction"
          output_location: "build"
          app_build_command: "CI=false npm run build"

      - name: Log Status
        if: always()
        working-directory: ./security-scan-dashboard
        run: |
          echo "Node version:"
          node -v
          echo "NPM version:"
          npm -v
          echo "Directory contents:"
          ls -la
          echo "Installed packages:"
          npm list --depth=0