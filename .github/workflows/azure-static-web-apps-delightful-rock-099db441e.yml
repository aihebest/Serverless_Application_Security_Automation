name: Azure Static Web Apps CI/CD

on:
  push:
    branches: [ master, main ]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [ master, main ]

jobs:
  build_and_deploy_job:
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - name: Verify Directory Structure
        run: |
          pwd
          echo "Current directory contents:"
          ls -la
          echo "Workspace path: $GITHUB_WORKSPACE"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.20.4'

      - name: Prepare Build Directory
        run: |
          # Ensure we're in the right location
          pwd
          # Create the target directory if it doesn't exist
          mkdir -p security-scan-dashboard
          # Copy all relevant files
          cp -r src security-scan-dashboard/
          cp package*.json security-scan-dashboard/
          cp -r public security-scan-dashboard/
          cp .env* security-scan-dashboard/ 2>/dev/null || true
          # Show the result
          echo "security-scan-dashboard contents:"
          ls -la security-scan-dashboard/

      - name: Install Dependencies
        working-directory: ./security-scan-dashboard
        run: |
          echo "Installing in $(pwd)"
          # Create .npmrc
          echo "legacy-peer-deps=true
          strict-peer-dependencies=false" > .npmrc
          
          # Install dependencies
          npm install --legacy-peer-deps

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        env:
          REACT_APP_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
          REACT_APP_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
          REACT_APP_API_BASE_URL: ${{ secrets.REACT_APP_API_BASE_URL }}
          NODE_OPTIONS: "--max-old-space-size=4096"
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_DELIGHTFUL_ROCK_099DB441E }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "security-scan-dashboard"
          api_location: "SecurityScanFunction"
          output_location: "build"
          skip_api_build: true
          app_artifact_location: "security-scan-dashboard/build"
          app_build_command: |
            cd security-scan-dashboard
            echo "Building in $(pwd)"
            ls -la
            npm install --legacy-peer-deps
            npm run build

      - name: Log Build Directory
        if: always()
        run: |
          echo "Current directory structure:"
          pwd
          ls -la
          echo "security-scan-dashboard contents:"
          ls -la security-scan-dashboard || echo "Directory not found"
          echo "Build output:"
          ls -la security-scan-dashboard/build || echo "Build directory not found"