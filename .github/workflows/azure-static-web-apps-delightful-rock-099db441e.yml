name: Azure Static Web Apps CI/CD

on:
  push:
    branches: [ master, main ]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [ master, main ]

jobs:
  build_and_deploy_job:
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.20.4'

      - name: Setup Project Structure
        working-directory: ./security-scan-dashboard
        run: |
          # Create necessary directories
          mkdir -p src/components/security src/services
          
          # Create package.json
          echo '{
            "name": "security-scan-dashboard",
            "version": "1.0.0",
            "private": true,
            "dependencies": {
              "@azure/msal-browser": "2.38.0",
              "@azure/msal-react": "1.5.13",
              "@fluentui/react-components": "9.30.0",
              "@microsoft/applicationinsights-web": "3.0.5",
              "ajv": "8.12.0",
              "react": "18.2.0",
              "react-dom": "18.2.0",
              "react-router-dom": "6.22.0",
              "react-scripts": "5.0.1",
              "recharts": "2.10.3",
              "d3-scale": "4.0.2",
              "d3-array": "3.2.4"
            },
            "devDependencies": {
              "@babel/core": "7.23.9",
              "@babel/preset-react": "7.23.3",
              "@babel/preset-env": "7.23.3",
              "@babel/plugin-proposal-private-property-in-object": "7.21.11",
              "@types/react": "18.2.0",
              "@types/react-dom": "18.2.0",
              "@types/recharts": "1.8.29",
              "typescript": "4.9.5"
            },
            "scripts": {
              "start": "react-scripts start",
              "build": "react-scripts build"
            }
          }' > package.json
          
          # Create .npmrc
          echo "legacy-peer-deps=true
          strict-peer-dependencies=false
          auto-install-peers=true" > .npmrc
          
          # Create SecurityComponents.js with Recharts
          echo 'import React from "react";
          import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from "recharts";

          export const SecurityTrendChart = ({ data }) => {
            return (
              <LineChart width={600} height={300} data={data}>
                <CartesianGrid strokeDasharray="3 3" />
                <XAxis dataKey="date" />
                <YAxis />
                <Tooltip />
                <Legend />
                <Line type="monotone" dataKey="score" stroke="#8884d8" />
              </LineChart>
            );
          };' > src/components/security/SecurityComponents.js

      - name: Install Dependencies
        working-directory: ./security-scan-dashboard
        run: |
          # Clean install
          rm -rf node_modules package-lock.json
          
          echo "Installing core dependencies first..."
          npm install --save react@18.2.0 react-dom@18.2.0 react-scripts@5.0.1
          
          echo "Installing Recharts and dependencies..."
          npm install --save recharts@2.10.3 d3-scale@4.0.2 d3-array@3.2.4
          
          echo "Installing remaining dependencies..."
          npm install --legacy-peer-deps
          
          echo "Verifying installations..."
          npm list recharts || echo "Recharts not found"

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        env:
          REACT_APP_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
          REACT_APP_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
          REACT_APP_API_BASE_URL: ${{ secrets.REACT_APP_API_BASE_URL }}
          CI: false
          GENERATE_SOURCEMAP: false
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_DELIGHTFUL_ROCK_099DB441E }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "security-scan-dashboard"
          api_location: "SecurityScanFunction"
          output_location: "build"
          app_build_command: |
            npm install --legacy-peer-deps
            CI=false GENERATE_SOURCEMAP=false npm run build

      - name: Log Build Status
        if: always()
        working-directory: ./security-scan-dashboard
        run: |
          echo "Directory structure:"
          ls -la
          echo "Security components:"
          ls -la src/components/security || echo "Security components directory not found"
          echo "Node modules:"
          ls -la node_modules/recharts || echo "Recharts not installed"
          echo "Package versions:"
          npm list recharts d3-scale d3-array