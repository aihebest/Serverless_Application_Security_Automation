name: Azure Static Web Apps CI/CD

on:
  push:
    branches: [ master, main ]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [ master, main ]

jobs:
  build_and_deploy_job:
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.20.4'

      - name: Setup Project Structure
        working-directory: ./security-scan-dashboard
        run: |
          # Create webpack.config.js
          echo 'const path = require("path");

          module.exports = {
            resolve: {
              fallback: {
                "buffer": require.resolve("buffer/"),
                "crypto": require.resolve("crypto-browserify"),
                "stream": require.resolve("stream-browserify"),
                "util": require.resolve("util/")
              }
            }
          };' > webpack.config.js
          
          # Create package.json with updated dependencies
          echo '{
            "name": "security-scan-dashboard",
            "version": "1.0.0",
            "private": true,
            "dependencies": {
              "@azure/msal-browser": "2.38.0",
              "@azure/msal-react": "1.5.13",
              "@fluentui/react-components": "9.30.0",
              "@microsoft/applicationinsights-web": "2.8.11",
              "@microsoft/applicationinsights-react-js": "3.4.3",
              "ajv": "8.12.0",
              "ajv-keywords": "5.1.0",
              "buffer": "6.0.3",
              "crypto-browserify": "3.12.0",
              "react": "18.2.0",
              "react-dom": "18.2.0",
              "react-router-dom": "6.22.0",
              "react-scripts": "5.0.1",
              "stream-browserify": "3.0.0",
              "util": "0.12.5"
            },
            "devDependencies": {
              "@babel/core": "7.23.9",
              "@babel/plugin-proposal-private-property-in-object": "7.21.11",
              "@babel/preset-env": "7.23.3",
              "@babel/preset-react": "7.23.3",
              "webpack": "5.89.0",
              "webpack-cli": "5.1.4"
            },
            "scripts": {
              "start": "GENERATE_SOURCEMAP=false react-scripts start",
              "build": "GENERATE_SOURCEMAP=false react-scripts build",
              "test": "react-scripts test",
              "eject": "react-scripts eject"
            },
            "eslintConfig": {
              "extends": ["react-app"]
            },
            "browserslist": {
              "production": [
                ">0.2%",
                "not dead",
                "not op_mini all"
              ],
              "development": [
                "last 1 chrome version",
                "last 1 firefox version",
                "last 1 safari version"
              ]
            }
          }' > package.json
          
          # Create .npmrc with updated settings
          echo "legacy-peer-deps=true
          strict-peer-dependencies=false
          engine-strict=false
          auto-install-peers=true
          fund=false" > .npmrc

      - name: Clear npm cache and node_modules
        working-directory: ./security-scan-dashboard
        run: |
          npm cache clean --force
          rm -rf node_modules package-lock.json

      - name: Install Dependencies
        working-directory: ./security-scan-dashboard
        run: |
          # Install dependencies with specific configurations
          npm install --legacy-peer-deps --no-fund
          
          # Verify critical packages
          npm list @microsoft/applicationinsights-web || true
          npm list ajv webpack || true

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        env:
          REACT_APP_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
          REACT_APP_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
          REACT_APP_API_BASE_URL: ${{ secrets.REACT_APP_API_BASE_URL }}
          CI: false
          GENERATE_SOURCEMAP: false
          NODE_OPTIONS: "--max-old-space-size=4096"
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_DELIGHTFUL_ROCK_099DB441E }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "security-scan-dashboard"
          api_location: "SecurityScanFunction"
          output_location: "build"
          app_build_command: "GENERATE_SOURCEMAP=false CI=false npm run build"