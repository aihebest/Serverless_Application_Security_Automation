name: Azure Static Web Apps CI/CD

on:
  push:
    branches: [ master, main ]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [ master, main ]

jobs:
  build_and_deploy_job:
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.20.4'
          cache: 'npm'

      - name: Install Dependencies
        working-directory: ./security-scan-dashboard
        run: |
          echo "Installing dependencies..."
          
          # Create clean package.json with required dependencies
          cat > package.json << 'EOL'
          {
            "name": "security-scan-dashboard",
            "version": "1.0.0",
            "private": true,
            "dependencies": {
              "@azure/msal-browser": "^2.39.0",
              "@azure/msal-react": "^1.5.13",
              "@fluentui/react-components": "^9.55.1",
              "@microsoft/applicationinsights-web": "^3.3.3",
              "@microsoft/signalr": "^7.0.14",
              "axios": "^1.7.7",
              "react": "^18.2.0",
              "react-dom": "^18.2.0",
              "react-router-dom": "^6.22.0",
              "react-scripts": "5.0.1",
              "recharts": "^2.13.0"
            },
            "devDependencies": {
              "@babel/plugin-proposal-private-property-in-object": "^7.21.11",
              "@types/node": "^16.18.0",
              "@types/react": "^18.2.0",
              "@types/react-dom": "^18.2.0",
              "@typescript-eslint/eslint-plugin": "^5.62.0",
              "@typescript-eslint/parser": "^5.62.0",
              "eslint": "^8.45.0",
              "eslint-config-react-app": "^7.0.1",
              "typescript": "^4.9.5"
            },
            "scripts": {
              "start": "react-scripts start",
              "build": "react-scripts build",
              "test": "react-scripts test",
              "eject": "react-scripts eject"
            },
            "browserslist": {
              "production": [
                ">0.2%",
                "not dead",
                "not op_mini all"
              ],
              "development": [
                "last 1 chrome version",
                "last 1 firefox version",
                "last 1 safari version"
              ]
            }
          }
          EOL
          
          # Create .npmrc
          echo "legacy-peer-deps=true
          strict-peer-dependencies=false
          auto-install-peers=true" > .npmrc
          
          # Install dependencies
          npm cache clean --force
          rm -rf node_modules package-lock.json
          npm install --legacy-peer-deps

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        env:
          REACT_APP_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
          REACT_APP_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
          REACT_APP_API_BASE_URL: ${{ secrets.REACT_APP_API_BASE_URL }}
          NODE_OPTIONS: "--max-old-space-size=4096"
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_DELIGHTFUL_ROCK_099DB441E }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "security-scan-dashboard"
          api_location: "SecurityScanFunction"
          output_location: "build"
          app_build_command: |
            npm install --legacy-peer-deps
            CI=false npm run build

      - name: Handle Build Failure
        if: failure() && steps.builddeploy.outcome == 'failure'
        run: |
          cd security-scan-dashboard
          echo "Checking node_modules:"
          ls -la node_modules || echo "node_modules not found"
          echo "Package versions:"
          npm list react-router-dom || echo "react-router-dom not installed"
          echo "Environment:"
          node -v
          npm -v