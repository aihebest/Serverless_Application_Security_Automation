name: Azure Static Web Apps CI/CD

on:
  push:
    branches: [ master, main ]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [ master, main ]

jobs:
  build_and_deploy_job:
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.20.4'

      - name: Setup Project Dependencies
        working-directory: ./security-scan-dashboard
        run: |
          echo "Creating/updating package.json..."
          # Add required dependencies
          npm install --save ajv@^8.0.0
          npm install --save-dev @babel/plugin-proposal-private-property-in-object@^7.21.11
          
          # Create proper .npmrc
          echo "legacy-peer-deps=true
          strict-peer-dependencies=false
          auto-install-peers=true
          node-version=18.20.4" > .npmrc
          
          # Clean install with specific resolutions
          npm install --legacy-peer-deps
          
          # Install additional necessary packages
          npm install --save-dev \
            @types/node@16.18.0 \
            typescript@4.9.5 \
            @typescript-eslint/eslint-plugin@5.62.0 \
            @typescript-eslint/parser@5.62.0 \
            eslint-config-react-app@7.0.1

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        env:
          REACT_APP_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
          REACT_APP_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
          REACT_APP_API_BASE_URL: ${{ secrets.REACT_APP_API_BASE_URL }}
          NODE_OPTIONS: "--max-old-space-size=4096"
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_DELIGHTFUL_ROCK_099DB441E }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "security-scan-dashboard"
          api_location: "SecurityScanFunction"
          output_location: "build"
          app_build_command: |
            npm install --legacy-peer-deps
            npm run build